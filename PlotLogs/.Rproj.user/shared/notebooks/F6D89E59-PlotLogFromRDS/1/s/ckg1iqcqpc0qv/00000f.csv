"0","# Define the server side"
"0","#| context: server"
"0","server <- function(input, output,session) {"
"0","v <- reactiveValues(doPlot = FALSE,"
"0","                    doRead = FALSE)"
"0"," observeEvent(input$file, {"
"0","    infile <- input$file"
"0","    if (is.null(infile)) {"
"0","      return(NULL)"
"0","    } else {"
"0","      numfiles <<- nrow(infile)"
"0","    }"
"0","    Data <- lapply(input$file$datapath, read_one_file) "
"0",""
"0","      updateSelectInput(session, ""spnorms"","
"0","           choices = attr( Data[[1]]$spectral,""names"")) # current selection"
"0",""
"0","      updateSelectInput(session, ""gpnorms"","
"0","           choices = attr( Data[[1]]$gridpoint,""names"")) # current selection"
"0","      "
"0","#          }"
"0",""
"0"," observeEvent(input$tabset, {   "
"0","   output$plot <- renderPlot({"
"0",""
"0","       if (input$tabset == ""Spectral norms"") {"
"0","        specimen <- ""spectral"""
"0","        Y <- input$spnorms"
"0","      } else if (input$tabset == ""Grid point norms""){"
"0","        specimen <- ""gridpoint"""
"0","        Y <- input$gpnorms"
"0","      } "
"0"," "
"0","     lista <- lapply(Data, function(x) tibble(id=x$meta$prefix, NSTEP=x[[specimen]]$NSTEP, "
"0","                                         NORM=x[[specimen]][[Y]]))"
"0","     TOC <- sapply(Data, function(x) paste(x$meta$start,""-"",x$meta$end,"
"0","                                            "" by "", x$meta$by,"" hours"","": "","
"0",""
"0","                                           basename(x$meta$path), "" \n"",sep="""") )"
"0",""
"0","     # Define color palette without yellow"
"0","     #color_palette <- c(""#00AFBB"", ""#E7B800"", ""#FC4E07"", ""#F781BF"", ""#7FBC41"", ""#B2DF8A"", ""#C7C7C7"", ""#E377C2"", ""#8C564B"")"
"0","     color_palette <- c(""black"", ""red"", ""blue"", ""orange"",  ""#F781BF"", ""#7FBC41"", ""#B2DF8A"", ""#C7C7C7"", ""#E377C2"", ""#8C564B"")"
"0","     #color_palette <- c(""blue"", ""blue"", ""blue"",  ""blue"", ""blue"", ""blue"", ""blue"", ""blue"",""red"", ""red"", ""red"",  ""red"", ""red"", ""red"", ""red"", ""red"")"
"0","         "
"0","     P <- ggplot(bind_rows(lista, .id=""df""), aes(NSTEP, NORM, colour=df)) + "
"0","       scale_color_manual(values = color_palette)  +"
"0","  geom_line() +"
"0","  ylab(Y) + "
"0","       ggtitle(paste(TOC,collapse=""""))"
"0","  "
"0","       if (input$showzero ==""yes""){"
"0","          P<- P + expand_limits(x = 0, y = 0)}"
"0",""
"0","P"
"0","   "
"0","#       p <- ggplot() + "
"0","#        geom_line(data = specimen, aes(x = NSTEP, y = .data[[Y]]), "
"0","#                                       colour = linecolour) +"
"0","#        ylab(Y) + "
"0","#        ggtitle(paste( input$path,input$prefix,""yyyymmddhh"",input$postfix,""\n"","
"0","#                  input$start,""-"",input$end,"" by "",input$by,"" hours"", sep=""""))"
"0",""
"0","#       P"
"0","  }) #RenderPlot"
"0","}) # observe event input$tabset"
"0"," }) # observe event input$file"
"0","  }"
